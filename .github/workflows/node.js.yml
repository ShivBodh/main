# This workflow performs a clean installation of Node.js dependencies,
# caches/restores them, builds the source code, and runs tests
# across different versions of Node.js.
# For more information, refer to: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI # Name of the workflow, as it will appear in GitHub Actions tab

on:
  push:
    branches: [ "main" ] # Triggers the workflow on push events to the 'main' branch.
  pull_request:
    branches: [ "main" ] # Triggers the workflow on pull request events targeting the 'main' branch.

jobs:
  build_and_test: # Renamed job from 'build' for more clarity on its purpose

    runs-on: ubuntu-latest # Specifies the runner environment for this job

    strategy:
      matrix:
        # Define the Node.js versions you want to test against.
        # It's good practice to include the LTS versions relevant to your project.
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [18.x, 20.x, 22.x] 

    steps:
    - name: Checkout Repository Code # Step to check out your repository code
      uses: actions/checkout@v4 # Using the latest stable version of actions/checkout

    - name: Use Node.js ${{ matrix.node-version }} # Set up the specific Node.js version for the current matrix run
      uses: actions/setup-node@v4 # Using the latest stable version of actions/setup-node
      with:
        node-version: ${{ matrix.node-version }} # The Node.js version from the matrix
        cache: 'npm' # Caches npm dependencies to speed up subsequent runs

    - name: Install Dependencies # Install Node.js dependencies using npm ci (clean install for CI)
      run: npm ci

    - name: Build Source Code # Build the project, if a build script exists in package.json
      # '--if-present' ensures the command doesn't fail if there's no 'build' script
      run: npm run build --if-present 

    - name: Run Tests # Execute project tests
      run: npm test
